{"otherData": {},"traceEvents":[{"cat":"function","dur":36645,"name":"glfwInit","ph":"X","pid":0,"tid":3646978565,"ts":2488166464096},{"cat":"function","dur":201453,"name":"glfwCreateWindow","ph":"X","pid":0,"tid":3646978565,"ts":2488166500897},{"cat":"function","dur":1671,"name":"void __cdecl Hazel::OpenGLContext::Init(void)","ph":"X","pid":0,"tid":3646978565,"ts":2488166702441},{"cat":"function","dur":44,"name":"void __cdecl Hazel::WindowsWindow::SetVSync(bool)","ph":"X","pid":0,"tid":3646978565,"ts":2488166704159},{"cat":"function","dur":241175,"name":"void __cdecl Hazel::WindowsWindow::Init(const struct Hazel::WindowProps &)","ph":"X","pid":0,"tid":3646978565,"ts":2488166463048},{"cat":"function","dur":241193,"name":"__cdecl Hazel::WindowsWindow::WindowsWindow(const struct Hazel::WindowProps &)","ph":"X","pid":0,"tid":3646978565,"ts":2488166463048},{"cat":"function","dur":8,"name":"void __cdecl Hazel::OpenGLRendererAPI::Init(void)","ph":"X","pid":0,"tid":3646978565,"ts":2488166704266},{"cat":"function","dur":17,"name":"__cdecl Hazel::OpenGLVertexArray::OpenGLVertexArray(void)","ph":"X","pid":0,"tid":3646978565,"ts":2488166704296},{"cat":"function","dur":13,"name":"__cdecl Hazel::OpenGLVertexBuffer::OpenGLVertexBuffer(unsigned int)","ph":"X","pid":0,"tid":3646978565,"ts":2488166704335},{"cat":"function","dur":0,"name":"void __cdecl Hazel::OpenGLVertexBuffer::Bind(void) const","ph":"X","pid":0,"tid":3646978565,"ts":2488166704412},{"cat":"function","dur":57,"name":"void __cdecl Hazel::OpenGLVertexArray::AddVertexBuffer(const class std::shared_ptr<class Hazel::VertexBuffer> &)","ph":"X","pid":0,"tid":3646978565,"ts":2488166704380},{"cat":"function","dur":179,"name":"__cdecl Hazel::OpenGLIndexBuffer::OpenGLIndexBuffer(unsigned int *,unsigned int)","ph":"X","pid":0,"tid":3646978565,"ts":2488166704856},{"cat":"function","dur":0,"name":"void __cdecl Hazel::OpenGLIndexBuffer::Bind(void) const","ph":"X","pid":0,"tid":3646978565,"ts":2488166705121},{"cat":"function","dur":42,"name":"void __cdecl Hazel::OpenGLVertexArray::SetIndexBuffer(const class std::shared_ptr<class Hazel::IndexBuffer> &)","ph":"X","pid":0,"tid":3646978565,"ts":2488166705118},{"cat":"function","dur":514,"name":"__cdecl Hazel::OpenGLTexture2D::OpenGLTexture2D(unsigned int,unsigned int)","ph":"X","pid":0,"tid":3646978565,"ts":2488166705208},{"cat":"function","dur":9,"name":"void __cdecl Hazel::OpenGLTexture2D::SetData(void *,unsigned int)","ph":"X","pid":0,"tid":3646978565,"ts":2488166705769},{"cat":"function","dur":143,"name":"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl Hazel::OpenGLShader::ReadFile(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":3646978565,"ts":2488166705799},{"cat":"function","dur":24,"name":"class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl Hazel::OpenGLShader::PreProcess(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":3646978565,"ts":2488166705968},{"cat":"function","dur":548,"name":"void __cdecl Hazel::OpenGLShader::Compile(const class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > &)","ph":"X","pid":0,"tid":3646978565,"ts":2488166706013},{"cat":"function","dur":810,"name":"__cdecl Hazel::OpenGLShader::OpenGLShader(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":3646978565,"ts":2488166705799},{"cat":"function","dur":2,"name":"void __cdecl Hazel::OpenGLShader::Bind(void) const","ph":"X","pid":0,"tid":3646978565,"ts":2488166706669},{"cat":"function","dur":28,"name":"void __cdecl Hazel::OpenGLShader::SetIntArray(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,int *,unsigned int)","ph":"X","pid":0,"tid":3646978565,"ts":2488166706693},{"cat":"function","dur":2471,"name":"void __cdecl Hazel::Renderer2D::Init(void)","ph":"X","pid":0,"tid":3646978565,"ts":2488166704293},{"cat":"function","dur":2518,"name":"void __cdecl Hazel::Renderer::Init(void)","ph":"X","pid":0,"tid":3646978565,"ts":2488166704266},{"cat":"function","dur":463,"name":"void __cdecl Hazel::ImGuiLayer::OnAttach(void)","ph":"X","pid":0,"tid":3646978565,"ts":2488166706805},{"cat":"function","dur":500,"name":"void __cdecl Hazel::Application::PushOverlay(class Hazel::Layer *)","ph":"X","pid":0,"tid":3646978565,"ts":2488166706803},{"cat":"function","dur":244276,"name":"__cdecl Hazel::Application::Application(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":3646978565,"ts":2488166463046},{"cat":"function","dur":2,"name":"__cdecl Hazel::OrthographicCamera::OrthographicCamera(float,float,float,float)","ph":"X","pid":0,"tid":3646978565,"ts":2488166707349},{"cat":"function","dur":138,"name":"stbi_load - OpenGLTexture2D::OpenGLTexture2D(const std::string&) ","ph":"X","pid":0,"tid":3646978565,"ts":2488166707378},{"cat":"function","dur":174,"name":"__cdecl Hazel::OpenGLTexture2D::OpenGLTexture2D(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":3646978565,"ts":2488166707378},{"cat":"function","dur":1252,"name":"void __cdecl Hazel::EditorLayer::OnAttach(void)","ph":"X","pid":0,"tid":3646978565,"ts":2488166707375},{"cat":"function","dur":1291,"name":"void __cdecl Hazel::Application::PushLayer(class Hazel::Layer *)","ph":"X","pid":0,"tid":3646978565,"ts":2488166707371}]}